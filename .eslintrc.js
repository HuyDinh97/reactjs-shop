module.exports = {
  env: {
    browser: true,
    commonjs: true,
    es6: true,
    node: true,
    jest: true,
  },
  root: true,
  parser: '@typescript-eslint/parser',
  extends: [
    'airbnb',
    'prettier',
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:cypress/recommended',
  ],
  plugins: [
    'react',
    'react-hooks',
    'prettier',
    '@typescript-eslint',
    'cypress',
  ],
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
      typescript: {
        project: ['tsconfig.json'],
      },
      react: {
        rootDir: ['.'],
      },
    },
  },
  rules: {
    'no-var': 'off',
    'no-use-before-define': 'off',
    '@typescript-eslint/no-use-before-define': ['error'],
    '@typescript-eslint/no-explicit-any': 'off',
    'react/prop-types': 'off',
    'prettier/prettier': [
      'error',
      {
        endOfLine: 'auto',
      },
    ],
    'no-console': 'off',
    'no-underscore-dangle': 'off',
    'import/no-unresolved': 'off',
    'react/jsx-filename-extension': [
      'error',
      {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    ],
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    'react/jsx-props-no-spreading': 'off',
    'react/require-default-props': 'off',
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        ts: 'never',
        tsx: 'never',
        js: 'never',
        jsx: 'never',
        mjs: 'never',
      },
    ],
    'import/no-extraneous-dependencies': [
      'warn',
      {
        devDependencies: [
          '**/*.test.js',
          '**/*.test.ts',
          '**/*.test.tsx',
          '**/test-utils.tsx',
          '**/rtl-test-utils.tsx',
          '**/rtl-store.ts',
          '**/setupTest.js',
          '**/cypress.config.ts',
          '**/__mocks__/**',
          '**/*.stories.tsx',
          '**/cypress/**/*.ts',
        ],
      },
    ],
    'cypress/assertion-before-screenshot': 'warn',
    'cypress/no-force': 'warn',
    'react/forbid-dom-props': ['warn', { forbid: ['style'] }],
    'react/forbid-component-props': ['warn', { forbid: ['style'] }],
    'react/jsx-curly-newline': 'off',
    'react/no-unused-prop-types': 'warn',
    'react/no-array-index-key': 'warn',
    '@typescript-eslint/ban-ts-comment': 'warn',
    'react/jsx-no-bind': 'warn',
    'no-shadow': 'off',
    '@typescript-eslint/no-shadow': 'warn',
    'no-useless-escape': 'warn',
    'import/prefer-default-export': 'warn',
    'no-nested-ternary': 'warn',
    camelcase: 'warn',
    'import/order': 'warn',
    'react/function-component-definition': 'warn',
    radix: 'warn',
    'react/destructuring-assignment': 'warn',
    'jsx-a11y/no-noninteractive-tabindex': 'warn',
    'jsx-a11y/tabindex-no-positive': 'warn',
    'react/jsx-wrap-multilines': 'off',
    'no-param-reassign': [
      'error',
      { props: true, ignorePropertyModificationsFor: ['state'] },
    ],
    'class-methods-use-this': 'warn',
    'default-param-last': 'warn',
    'no-unsafe-optional-chaining': 'warn',
    'react/jsx-no-constructed-context-values': 'warn',
    'react/jsx-no-useless-fragment': 'warn',
    'react/no-unstable-nested-components': 'warn',
    'no-promise-executor-return': 'warn',
    'react/display-name': 'off',
    'react/jsx-key': 'off',
    '@typescript-eslint/no-unused-vars': [
      'warn',
      {
        vars: 'all',
        args: 'after-used',
        ignoreRestSiblings: false,
        argsIgnorePattern: '^_',
        destructuredArrayIgnorePattern: '^_',
      },
    ],
  },
};
